@charset "utf-8";

@mixin responsive-padding {
  padding-left: var(--article-padding);
  padding-right: var(--article-padding);

  @media screen and (min-width: $desktop) {
    padding-left: unset;
    padding-right: unset;
  }
}

/** Bulma-based styles */
.hugo-article {
  --article-padding: #{$article-padding};
}

.hugo-article .hugo-article-body {
  // Add padding to every direct children that
  // are not <figure> or <img>, and add padding to
  // every non-<img> inside figure.
  // This makes the imgs fill the available horizontal
  // space if they're big enough, although it does not work
  // for markdown's ![alt](url) format because they are
  // enclosed in <p> by default
  > *:not(figure):not(img),
  figure > *:not(img) {
    @include responsive-padding;
  }

  // Add padding to the first element,
  // if it hasn't specified any:
  > :first-child {
    padding-top: var(--article-padding);
  }

  h3 {
    @extend .pt-5;

    &::first-letter {
      margin-left: 1rem;
    }

    @extend .is-size-3;
    @extend .is-size-4-mobile;
    @extend .has-text-weight-semibold;
  }

  > p {
    &::first-letter {
      margin-left: 1rem;
    }

    @extend .is-size-4;
    @extend .is-size-5-mobile;
  }

  > p + p {
    @extend .pt-4;
  }

  figure {
    @extend .py-4;

    display: flex;
    flex-direction: column;

    * {
      align-self: center;
    }

    figcaption {
      @extend .is-italic;
      text-align: center;

      h4 {
        @extend .has-text-weight-semibold;
      }
    }
  }
}

.hugo-article header {
  >*:not(figure) {
    @include responsive-padding;
  }
}
